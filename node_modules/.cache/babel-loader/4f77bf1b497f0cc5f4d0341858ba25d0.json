{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport axios from 'axios';\nconst baseUrl = 'https://www.metaweather.com/api/location';\nconst crossDomain = 'https://the-ultimate-api-challenge.herokuapp.com';\nconst requestUrl = `${crossDomain}/${baseUrl}`;\n\nconst useForecast = () => {\n  _s();\n\n  const {\n    isError,\n    setError\n  } = useState(false);\n  const {\n    isLoading,\n    setLoading\n  } = useState(false);\n  const {\n    forecast,\n    setForecast\n  } = useState(null);\n\n  const getWoeid = async location => {\n    const {\n      data\n    } = await axios(`${requestUrl}/search`, {\n      params: {\n        query: location\n      }\n    });\n\n    if (!data || data.length === 0) {\n      setError('No such location');\n      return;\n    }\n\n    return data;\n  };\n\n  const getForecastData = async woeid => {\n    const {\n      data\n    } = await axios(`${requestUrl}/${woeid}`);\n\n    if (!data || data.length === 0) {\n      setError('Something went wrong');\n      return;\n    }\n\n    return data;\n  };\n\n  const submitRequest = async location => {\n    const response = await getWoeid(location);\n    const data = await getForecastData(response[0].woeid);\n    console.log({\n      data\n    });\n  };\n\n  return {\n    isError,\n    isLoading,\n    forecast,\n    submitRequest\n  };\n};\n\n_s(useForecast, \"GIj4oEHHzzZ+6gSIxaXvxPT8rGc=\");\n\nexport default useForecast;","map":{"version":3,"sources":["/Users/jade/development/weather-app/src/hooks/useForecast.js"],"names":["useState","axios","baseUrl","crossDomain","requestUrl","useForecast","isError","setError","isLoading","setLoading","forecast","setForecast","getWoeid","location","data","params","query","length","getForecastData","woeid","submitRequest","response","console","log"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,0CAAhB;AACA,MAAMC,WAAW,GAAG,kDAApB;AACA,MAAMC,UAAU,GAAI,GAAED,WAAY,IAAGD,OAAQ,EAA7C;;AAEA,MAAMG,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAAsBP,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM;AAACQ,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,MAA0BT,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM;AAACU,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAA0BX,QAAQ,CAAC,IAAD,CAAxC;;AAEA,QAAMY,QAAQ,GAAG,MAAOC,QAAP,IAAoB;AACjC,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMb,KAAK,CAAE,GAAEG,UAAW,SAAf,EAAyB;AAACW,MAAAA,MAAM,EAAE;AAAEC,QAAAA,KAAK,EAAEH;AAAT;AAAT,KAAzB,CAA5B;;AAEA,QAAI,CAACC,IAAD,IAASA,IAAI,CAACG,MAAL,KAAgB,CAA7B,EAAgC;AAC5BV,MAAAA,QAAQ,CAAC,kBAAD,CAAR;AACA;AACH;;AAED,WAAOO,IAAP;AACH,GATD;;AAWA,QAAMI,eAAe,GAAG,MAAOC,KAAP,IAAiB;AACrC,UAAM;AAACL,MAAAA;AAAD,QAAS,MAAMb,KAAK,CAAE,GAAEG,UAAW,IAAGe,KAAM,EAAxB,CAA1B;;AACA,QAAI,CAACL,IAAD,IAASA,IAAI,CAACG,MAAL,KAAgB,CAA7B,EAAgC;AAC5BV,MAAAA,QAAQ,CAAC,sBAAD,CAAR;AACA;AACH;;AAED,WAAOO,IAAP;AACH,GARD;;AAUA,QAAMM,aAAa,GAAG,MAAMP,QAAN,IAAkB;AACpC,UAAMQ,QAAQ,GAAG,MAAMT,QAAQ,CAACC,QAAD,CAA/B;AACA,UAAMC,IAAI,GAAG,MAAMI,eAAe,CAACG,QAAQ,CAAC,CAAD,CAAR,CAAYF,KAAb,CAAlC;AAEAG,IAAAA,OAAO,CAACC,GAAR,CAAY;AAACT,MAAAA;AAAD,KAAZ;AACH,GALD;;AAOA,SAAO;AACHR,IAAAA,OADG;AAEHE,IAAAA,SAFG;AAGHE,IAAAA,QAHG;AAIHU,IAAAA;AAJG,GAAP;AAMH,CAvCD;;GAAMf,W;;AAyCN,eAAeA,WAAf","sourcesContent":["import { useState } from 'react';\nimport axios from 'axios';\n\nconst baseUrl = 'https://www.metaweather.com/api/location';\nconst crossDomain = 'https://the-ultimate-api-challenge.herokuapp.com';\nconst requestUrl = `${crossDomain}/${baseUrl}`;\n\nconst useForecast = () => {\n    const {isError, setError} = useState(false);\n    const {isLoading, setLoading} = useState(false);\n    const {forecast, setForecast} = useState(null);\n\n    const getWoeid = async (location) => {\n        const { data } = await axios(`${requestUrl}/search`, {params: { query: location }});\n\n        if (!data || data.length === 0) {\n            setError('No such location');\n            return;\n        }\n\n        return data;\n    };\n\n    const getForecastData = async (woeid) => {\n        const {data} = await axios(`${requestUrl}/${woeid}`);\n        if (!data || data.length === 0) {\n            setError('Something went wrong');\n            return;\n        }\n\n        return data;\n    };\n\n    const submitRequest = async location => {\n        const response = await getWoeid(location);\n        const data = await getForecastData(response[0].woeid)\n\n        console.log({data});\n    };\n\n    return {\n        isError,\n        isLoading,\n        forecast,\n        submitRequest,\n    };\n};\n\nexport default useForecast;"]},"metadata":{},"sourceType":"module"}